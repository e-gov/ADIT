--
-- Definition for function trigger_fct_tr_document_log (OID = 24715) : 
--
CREATE OR REPLACE FUNCTION adit.trigger_fct_tr_document_log (
)
RETURNS trigger
AS 
$body$
DECLARE
  operation varchar(100);
  DOCUMENT_new adit.DOCUMENT%ROWTYPE;
  DOCUMENT_old adit.DOCUMENT%ROWTYPE;
BEGIN

  if TG_OP = 'INSERT' then
    operation := 'INSERT';
  else
    if TG_OP = 'UPDATE' then
      operation := 'UPDATE';
    else
      operation := 'DELETE';
    end if;
  end if;

  if TG_OP != 'DELETE' then	
	  DOCUMENT_new.ID := NEW.ID;
	  DOCUMENT_new.GUID := NEW.GUID;
	  DOCUMENT_new.TITLE := NEW.TITLE;
	  DOCUMENT_new.TYPE := NEW.TYPE;
	  DOCUMENT_new.CREATOR_CODE := NEW.CREATOR_CODE;
	  DOCUMENT_new.CREATOR_NAME := NEW.CREATOR_NAME;
	  DOCUMENT_new.CREATOR_USER_CODE := NEW.CREATOR_USER_CODE;
	  DOCUMENT_new.CREATOR_USER_NAME := NEW.CREATOR_USER_NAME;
	  DOCUMENT_new.CREATION_DATE := NEW.CREATION_DATE;
	  DOCUMENT_new.REMOTE_APPLICATION := NEW.REMOTE_APPLICATION;
	  DOCUMENT_new.LAST_MODIFIED_DATE := NEW.LAST_MODIFIED_DATE;
	  DOCUMENT_new.DOCUMENT_DVK_STATUS_ID := NEW.DOCUMENT_DVK_STATUS_ID;
	  DOCUMENT_new.DVK_ID := NEW.DVK_ID;
	  DOCUMENT_new.DOCUMENT_WF_STATUS_ID := NEW.DOCUMENT_WF_STATUS_ID;
	  DOCUMENT_new.PARENT_ID := NEW.PARENT_ID;
	  DOCUMENT_new.LOCKED := NEW.LOCKED;
	  DOCUMENT_new.LOCKING_DATE := NEW.LOCKING_DATE;
	  DOCUMENT_new.SIGNABLE := NEW.SIGNABLE;
	  DOCUMENT_new.DEFLATED := NEW.DEFLATED;
	  DOCUMENT_new.DEFLATE_DATE := NEW.DEFLATE_DATE;
	  DOCUMENT_new.DELETED := NEW.DELETED;
	  DOCUMENT_new.dhx_receipt_id := NEW.dhx_receipt_id;
	  DOCUMENT_new.dhx_consignment_id := NEW.dhx_consignment_id;
  end if;
  
  if TG_OP != 'INSERT' then
	  DOCUMENT_old.ID := OLD.ID;
	  DOCUMENT_old.GUID := OLD.GUID;
	  DOCUMENT_old.TITLE := OLD.TITLE;
	  DOCUMENT_old.TYPE := OLD.TYPE;
	  DOCUMENT_old.CREATOR_CODE := OLD.CREATOR_CODE;
	  DOCUMENT_old.CREATOR_NAME := OLD.CREATOR_NAME;
	  DOCUMENT_old.CREATOR_USER_CODE := OLD.CREATOR_USER_CODE;
	  DOCUMENT_old.CREATOR_USER_NAME := OLD.CREATOR_USER_NAME;
	  DOCUMENT_old.CREATION_DATE := OLD.CREATION_DATE;
	  DOCUMENT_old.REMOTE_APPLICATION := OLD.REMOTE_APPLICATION;
	  DOCUMENT_old.LAST_MODIFIED_DATE := OLD.LAST_MODIFIED_DATE;
	  DOCUMENT_old.DOCUMENT_DVK_STATUS_ID := OLD.DOCUMENT_DVK_STATUS_ID;
	  DOCUMENT_old.DVK_ID := OLD.DVK_ID;
	  DOCUMENT_old.DOCUMENT_WF_STATUS_ID := OLD.DOCUMENT_WF_STATUS_ID;
	  DOCUMENT_old.PARENT_ID := OLD.PARENT_ID;
	  DOCUMENT_old.LOCKED := OLD.LOCKED;
	  DOCUMENT_old.LOCKING_DATE := OLD.LOCKING_DATE;
	  DOCUMENT_old.SIGNABLE := OLD.SIGNABLE;
	  DOCUMENT_old.DEFLATED := OLD.DEFLATED;
	  DOCUMENT_old.DEFLATE_DATE := OLD.DEFLATE_DATE;
	  DOCUMENT_old.DELETED := OLD.DELETED;
	  DOCUMENT_old.dhx_receipt_id := OLD.dhx_receipt_id;
	  DOCUMENT_old.dhx_consignment_id := OLD.dhx_consignment_id;
  end if;

  PERFORM  adit.ADITLOG.LOG_DOCUMENT(
    DOCUMENT_new,
    DOCUMENT_old,
    operation
  );

RETURN NEW;
END
$body$
LANGUAGE plpgsql
SECURITY DEFINER;
--
-- Definition for function trigger_fct_tr_document_sharing_log (OID = 24717) : 
--
CREATE OR REPLACE FUNCTION adit.trigger_fct_tr_document_sharing_log (
)
RETURNS trigger
AS 
$body$
DECLARE
  operation varchar(100);
  DOCUMENT_SHARING_new adit.DOCUMENT_SHARING%ROWTYPE;
  DOCUMENT_SHARING_old adit.DOCUMENT_SHARING%ROWTYPE;
BEGIN
 
  if TG_OP = 'INSERT' then
    operation := 'INSERT';
  else
    if TG_OP = 'UPDATE' then
      operation := 'UPDATE';
    else
      operation := 'DELETE';
    end if;
  end if; 

  if TG_OP != 'DELETE' then	
	  DOCUMENT_SHARING_new.ID := NEW.ID;
	  DOCUMENT_SHARING_new.DOCUMENT_ID := NEW.DOCUMENT_ID;
	  DOCUMENT_SHARING_new.USER_CODE := NEW.USER_CODE;
	  DOCUMENT_SHARING_new.USER_NAME := NEW.USER_NAME;
	  DOCUMENT_SHARING_new.SHARING_TYPE := NEW.SHARING_TYPE;
	  DOCUMENT_SHARING_new.TASK_DESCRIPTION := NEW.TASK_DESCRIPTION;
	  DOCUMENT_SHARING_new.CREATION_DATE := NEW.CREATION_DATE;
	  DOCUMENT_SHARING_new.DVK_STATUS_ID := NEW.DVK_STATUS_ID;
	  DOCUMENT_SHARING_new.WF_STATUS_ID := NEW.WF_STATUS_ID;
	  DOCUMENT_SHARING_new.FIRST_ACCESS_DATE := NEW.FIRST_ACCESS_DATE;
	  DOCUMENT_SHARING_new.DVK_ID := NEW.DVK_ID;
	  DOCUMENT_SHARING_new.dhx_receipt_id := NEW.dhx_receipt_id;
	  DOCUMENT_SHARING_new.dhx_consignment_id := NEW.dhx_consignment_id;
	  DOCUMENT_SHARING_new.dhx_fault := NEW.dhx_fault;
	  DOCUMENT_SHARING_new.dhx_received_date := NEW.dhx_received_date;
	  DOCUMENT_SHARING_new.dhx_sent_date := NEW.dhx_sent_date;
  end if;	  
  
  if TG_OP != 'INSERT' then
	  DOCUMENT_SHARING_old.ID := OLD.ID;
	  DOCUMENT_SHARING_old.DOCUMENT_ID := OLD.DOCUMENT_ID;
	  DOCUMENT_SHARING_old.USER_CODE := OLD.USER_CODE;
	  DOCUMENT_SHARING_old.USER_NAME := OLD.USER_NAME;
	  DOCUMENT_SHARING_old.SHARING_TYPE := OLD.SHARING_TYPE;
	  DOCUMENT_SHARING_old.TASK_DESCRIPTION := OLD.TASK_DESCRIPTION;
	  DOCUMENT_SHARING_old.CREATION_DATE := OLD.CREATION_DATE;
	  DOCUMENT_SHARING_old.DVK_STATUS_ID := OLD.DVK_STATUS_ID;
	  DOCUMENT_SHARING_old.WF_STATUS_ID := OLD.WF_STATUS_ID;
	  DOCUMENT_SHARING_old.FIRST_ACCESS_DATE := OLD.FIRST_ACCESS_DATE;
	  DOCUMENT_SHARING_old.DVK_ID := OLD.DVK_ID;
	  DOCUMENT_SHARING_old.dhx_receipt_id := OLD.dhx_receipt_id;
	  DOCUMENT_SHARING_old.dhx_consignment_id := OLD.dhx_consignment_id;
	  DOCUMENT_SHARING_old.dhx_fault := OLD.dhx_fault;
	  DOCUMENT_SHARING_old.dhx_received_date := OLD.dhx_received_date;
	  DOCUMENT_SHARING_old.dhx_sent_date := OLD.dhx_sent_date;
  end if;	  

  PERFORM  adit.ADITLOG.LOG_DOCUMENT_SHARING(
    DOCUMENT_SHARING_new,
    DOCUMENT_SHARING_old,
    operation
  );

RETURN NEW;
END
$body$
LANGUAGE plpgsql
SECURITY DEFINER;